○ルール概要
動的参照にOFFSETを使わず、INDEXとMATCHまたはXLOOKUPを使用する。
○ルールが必要な理由や背景
OFFSETは非推奨の可変参照で計算負荷が高く、追跡が難しい。INDEX系は可読性とパフォーマンスに優れる。
○ルールがない場合に引き起こされるミス
大量データでOFFSETがバルク発火し、再計算に数分を要する。
○具体的な対応
1.	動的範囲にはINDEX(SEQUENCE())+COUNTAで範囲算出。
2.	Office365環境ではLET+LAMBDAで関数定義。

○ルール概要
複雑な数式はLETで変数定義し可読性と速度を向上。
○ルールが必要な理由や背景
重複再計算を排除し、エラー修正も変数単位で行える。
○ルールがない場合に引き起こされるミス
同一VLOOKUPを5回参照し再計算ループが重くなる。
○具体的な対応
1.	Office365限定。旧バージョンは計算列を分割。

○ルール概要
SEQUENCE、FILTER、UNIQUE等の動的配列を利用し、旧式配列数式を使用しない。
○ルールが必要な理由や背景
保守担当が配列数式を認識せず上書きするリスクを排除。
○ルールがない場合に引き起こされるミス
CSE配列の存在に気づかず単一セル修正→{ }外れる→#SPILL!発生。
○具体的な対応
1.	不可避の場合はセルコメントで「CSE必要」と明示。

○ルール概要
「=VLOOKUP(key,Table,MATCH(列名,Header,0),FALSE)」を使用。
○ルールが必要な理由や背景
列挿入で列番号が変動しても自動追随。
○ルールがない場合に引き起こされるミス
追加列で2→3ずれ、誤列参照。
○具体的な対応
1.	代替としてXLOOKUP使用推奨。

○ルール概要
複雑分岐をIFSで可読化。
○ルールが必要な理由や背景
ネスト深度が増すと括弧過不足や論理誤解を招く。
○ルールがない場合に引き起こされるミス
IF(…IF(…IF…の括弧1つ不足で#REF!。
○具体的な対応
1.	旧環境はLOOKUPテーブル参照で代替。

○ルール概要
INDIRECTによる動的シート名参照を禁止し、明示的リンクまたはXLOOKUPで統一。
○ルールが必要な理由や背景
INDIRECTはシートリネーム時に壊れず検出困難。
○ルールがない場合に引き起こされるミス
年次更新で「2024」シートを「2025」へ変更した際、旧参照が生き続け誤計算。
○具体的な対応
1.	参照用に一覧表を設け、CHOOSECOLS関数で分岐。

○ルール概要
集計セルは=SUBTOTAL(109,範囲)で隠し行除外。
○ルールが必要な理由や背景
フィルタリング時に合計が自動更新され、誤報防止。
○ルールがない場合に引き起こされるミス
フィルタで一部行非表示でもSUMが全行合計し誤値を報告。
○具体的な対応
1.	シート保護時もSUBTOTALは機能。

○ルール概要
動的列抽出にINDEXではなくCHOOSECOLS(Table,{1,3,5})を使用。
○ルールが必要な理由や背景
列追加で番号が変動しても名称依存しないため安全。
○ルールがない場合に引き起こされるミス
手作業修正が漏れ列順が崩れる。
○具体的な対応
1.	Office365以外はPowerQueryを検討。

○ルール概要
条件に合致するデータ転記は=FILTER(Source,条件)を使い、手作業の結合コピー禁止。
○ルールが必要な理由や背景
再現性を保ち、転記漏れ・重複を排除。
○ルールがない場合に引き起こされるミス
手選択ミスで行抜けし、集計差異が発生。
○具体的な対応
1.	Office365限定。旧バージョンはPowerQuery。

○ルール概要
除算、VLOOKUP、MATCH等でエラーが発生する可能性のある数式は、必ずIFERROR関数で囲み、エラー時の表示内容を明確に定義する。
○ルールが必要な理由や背景
リスク管理業務では膨大なデータを扱うため、参照先データの欠損や計算の前提条件変更により#DIV/0!、#N/A等のエラーが頻繁に発生する34。エラー値がそのまま表示されると、後続の計算や集計に影響し、リスク評価全体の信頼性が損なわれる。IFERROR関数により適切なエラーハンドリングを行うことで、システマティックなデータ処理が可能になる。
○ルールがない場合に引き起こされるミス
エラー値が表示されると、そのセルを参照する他の計算もエラーとなり、連鎖的にシート全体の計算が停止し、リスク評価業務が進められなくなる。
○具体的な対応
計算式を「=IFERROR(元の数式, "N/A")」の形式で記述する。エラー時の表示は空白("")、0、"N/A"、"データなし"等から業務に応じて選択し、部門内で統一する。特に除算は「=IFERROR(A1/B1,0)」、VLOOKUP は「=IFERROR(VLOOKUP(検索値,範囲,列番号,FALSE),"該当なし")」の形式を基本とする。

○ルール概要
IF、VLOOKUP等の関数の入れ子は3段階までとし、それ以上複雑な処理は複数セルに分割して段階的に計算する。
○ルールが必要な理由や背景
過度に複雑な関数の入れ子は可読性を著しく低下させ、デバッグや修正を困難にする1516。Excel初～中級者が多い職場では、複雑すぎる数式は属人化の原因となり、チーム内での知識共有を阻害する。段階的な計算により、各ステップでの検証が可能になり、計算ロジックの透明性と保守性が向上する。
○ルールがない場合に引き起こされるミス
複雑な数式でエラーが発生した際に原因特定に時間がかかり、修正作業の効率が低下する。他の担当者が理解できず属人化する。
○具体的な対応
「=IF(A1>0,VLOOKUP(A1,範囲,2,FALSE),IF(A1<0,VLOOKUP(A1,範囲2,3,FALSE),0))」のような複雑な数式は、B1「=IF(A1>0,"正","負")」、C1「=IF(B1="正",VLOOKUP(A1,範囲,2,FALSE),VLOOKUP(A1,範囲2,3,FALSE))」のように分割する。中間セルには適切な説明コメントを付ける。

