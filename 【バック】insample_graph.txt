###推計したパラメータを用いたグラフの出力

##Hについて
C = function (t, T, alpha, sigma, q) {
  k = sqrt(alpha^2 + 2 * sigma^2 * q)
  2 * q * (1 - exp(-(T - t) * k))/(k + alpha + (k -alpha) * exp(-(T - t) * k))
}

int_C = function(t, T, alpha, sigma, q) {
    k = sqrt(alpha^2 + 2 * sigma^2 * q)
    2/sigma^2 * log((k + alpha+(k-alpha)*exp(-k*(T-t)))/(2*k))+2*q*(T-t)/(k+alpha)
}

#Hを構成する関数の定義
EQ_r = function(t, T, q, r, prob) {
      if (prob == "Q") {
        alpha = alpha_r + sigma_r * k_r
        beta = alpha_r * beta_r/(alpha_r + sigma_r *k_r)
      }
  
      if (prob == "Qd") {
        alpha = alpha_r + sigma_r * k_r * (1 - 1/delta)
        beta = alpha_r * beta_r/(alpha_r + sigma_r *k_r*(1 - 1/delta) )
      }
  
      exp (-alpha * beta * int_C(t, T, alpha, sigma_r,q) - C(t, T, alpha, sigma_r, q) * r)
}

EQ_l = function (t, T, q, u, v, l, prob, sex) {
  alpha = alpha_l[sex]
  phi = phi_l[sex]
  m = m_l[sex]
  b = b_l[sex]
  sigma = sigma_l[sex]
  
  if (prob == "Q") {
    alpha1 = alpha + sigma * k_l
    beta = function(s) {
      alpha1 * (phi + (1/(alpha1 * b) + 1)/b *
                  exp ((age + s - m) /b))/(alpha1 + sigma *k_l)
    }
  }
  if (prob == "Qd") {
    alpha1 = alpha + sigma * k_l * (1 - 1/delta)
    beta = function(s) {
    alpha * (phi + (1/(alpha1 * b) + 1)/b *
                  exp ((age + s - m)/b))/(alpha1 + sigma * k_l*(1 - 1/delta) )
          
    }
  }
  INT_A = function(s) {
    beta(s) * exp(-alpha1 * (s - t) - sigma^2 *
                    int_C(t, s, alpha1, sigma, q))
  }
  INT_B = function(s) {
    beta(s) * C(t, s, alpha1, sigma, q)
  }
    
  (u + alpha1 * v * integrate(INT_A, t, T) $value +
      v* exp (-alpha1*(T - t) - sigma^2 * int_C(t,T, alpha1, sigma, q))*l)/exp(alpha1 *integrate (INT_B, t, T) $value + C(t, T, alpha1,sigma, q) *l)

}
# 死力の初期値
l0 = (phi_l + (1/(alpha_l * b_l) + 1)/b_l * exp((age +0 - m_l)/b_l))

EQ_c_r = function(t, T, c, r) {
  alpha = alpha_r + sigma_r * k_r
  beta = alpha_r * beta_r/(alpha_r + sigma_r * k_r)
  c*exp((mu_c - sigma_cA * xi_A) * (T - t) ) * exp(-alpha *
    beta * int_C(t, T, alpha - sigma_r * sigma_cr,
    sigma_r, 1 + k_r * sigma_cr)) * exp(-C(t, T,
    alpha - sigma_r * sigma_cr, sigma_r, 1 + k_r *
    sigma_cr) * r)
}

H = function(t, r, l, sex) {
  INT = function(s) {
    func = function(s) {
      EQ_l(t = t, T = s, q = 1, u = 1, v = 0,
            l = l, prob = "Q", sex = sex) * EQ_r(t = t,T = s, q = 1, r= r, prob = "Q")
    }
    sapply (s, func)
  }
  integrate(INT, t, 200) $value
}

##Fについて
rho = beta_r
F= function(t, r, l, sex) {
  INT = function(s) {
    func = function(s) {
      q_l = 1 + 0.5 * (delta - 1)/delta^2 * k_l^2
      q_r = 1 - 1/delta + 0.5 * (delta - 1)/delta^2 * k_r^2
      
      EQ_l(t = t, T = s, q = q_l, u = 0, v = 1,l = l, prob = "Qd", sex = sex) *
      EQ_r(t = t,T = s, q = q_r, r = r, prob = "Qd") *
      exp (- (rho/delta + 0.5 * (delta - 1)/delta^2 *xi_A^2) * (s - t) )
      
    }
    sapply (s, func)
  }
  integrate (INT, t, 200) $value
}

#年金料
pension = function(T, r0, l0, c0, sex) {
  INT_Num = function(s) {
    func = function(s) {
      EQ_c_r(t = 0, s, c = c0, r = r0) * 
      EQ_l(t = 0,s, q = 1, u = 1, v = 0, l = l0, prob = "Q",sex = sex)
    }
    sapply (s, func)
  }
  INT_Den = function(s) {
        func = function(s) {
          EQ_r(t = 0, s, q = 1, r = r0, prob = "Q") *
          EQ_l(t = 0, s, q = 1, u = 1, v = 0, l= l0, prob = "Q", sex = sex)
        }
        sapply (s, func)
  }
  integrate (INT_Num, 0, T) $value/integrate(INT_Den,T, 200) $value
}

p = c(NA, NA)
p[1]=pension(T = 65 - age, r0 = beta_r, l0 = l0[1] ,c0 = 1, sex = 1)
p[2]=pension(T = 65 - age, r0 = beta_r, l0 = l0[2],c0 = 1, sex = 2)
p

#PMR
PMR = function(t, T, c, r, l, sex) {
  INT_A = function(s){
    func = function(s){
      EQ_c_r(t, s, c, r) * EQ_l(t, s, q = 1,u = 1, v = 0, l, prob = "Q", sex)
    }
    sapply (s, func)
  }  
  INT_D = function(s) {
    func = function(s) {
      EQ_r(t, s, q = 1, r, prob = "Q") * EQ_l(t,s, q = 1, u = 1, v = 0, l, prob = "Q",sex )
    }
    sapply (s, func)
  }
  p[sex] * integrate (INT_D, max(t, T), 200)$value - integrate(INT_A, min(t, T) , T)$value
}

#dDelta/dc
dDelta_dc = function(t, T, r, l, c, sex) {
  INT = function(s){
    func = function(s){
      EQ_c_r(t, s, c, r) * EQ_l(t, s, q = 1,u = 1, v = 0, l, prob= "Q", sex)
    }
    sapply(s,func)
  }
  -integrate(INT, t, T)$value/c * as.numeric(t <T)
}

#dQr/dr
dEQ_r_dr = function(q, prob, t, T, r) {
  if (prob == "Q") {
    alpha = alpha_r + sigma_r * k_r
    beta = alpha_r * beta_r/(alpha_r + sigma_r*k_r )
  }

  if (prob == "Qd") {
    alpha = alpha_r + sigma_r * k_r * (1 - 1/delta)
    beta = alpha_r * beta_r/(alpha_r + sigma_r*k_r * (1 - 1/delta))
  }
    -C(t, T, alpha, sigma_r, q) * exp(-alpha * beta *int_C(t, T, alpha, sigma_r, q) - C(t, T, alpha,sigma_r, q) * r)
} 
    
#dEQ_L_dl
dEQ_l_dl = function(q, u, v, prob, t, T, l, sex) {
  alpha_l = alpha_l[sex]
  sigma_l = sigma_l[sex]
  phi = phi_l[sex]
  b = b_l[sex]
  m = m_l[sex]
  if (prob == "Q") {
    alpha = alpha_l + sigma_l * k_l
    beta = function(s) {
      alpha_l * (phi + (1/(alpha_l * b) + 1)/b *exp ((age + s - m)/b) )/(alpha_l + sigma_l *k_l)
    }
  }
  if (prob == "Qd") {
      alpha = alpha_l + sigma_l * k_l * (1 - 1/delta)
      beta = function(s) {
      alpha_l * (phi + (1/(alpha_l * b) + 1)/b * exp((age + s - m)/b) )/ (alpha_l + sigma_l *k_l * (1 - 1/delta))
      }
  }
  INT_A = function(s) {
      alpha + (sigma_l^2 + alpha * beta(s)) * C(t,s, alpha, sigma_l, q)
  }
  v*exp(-integrate(INT_A, t, T)$value - C(t, T,alpha, sigma_l, q) * l) - 
    C(t, T, alpha, sigma_l,q) * EQ_l(t, T, q, u, v, l, prob, sex)
}

dEQ_c_r_dr = function(t, T, c, r) {
  alpha = alpha_r + sigma_r * k_r
  beta = alpha_r * beta_r/(alpha_r + sigma_r * k_r)
  c*exp((mu_c - sigma_cA * xi_A) * (T - t)) * 
    exp(-alpha *beta * int_C(t, T, alpha - sigma_r * sigma_cr,sigma_r, 1 + k_r * sigma_cr)) *
    exp(-C(t, T,alpha - sigma_r * sigma_cr, sigma_r, 1 + k_r*sigma_cr) * r) *
    (-C(t, T, alpha - sigma_r * sigma_cr, sigma_r, 1 + k_r * sigma_cr) )
}


#dH_dr
dH_dr = function(t, r, l, sex) {
  INT = function (s) {
    func = function(s) {
      EQ_l(t, s, q = 1, u = 0, v = 1, l, prob = "Q",sex) * dEQ_r_dr (q = 1, prob = "Q",t, s, r)
    }
    sapply (s, func)
  }  
  integrate (INT, t, 200)$value
}

dH_dl = function (t, r, l, sex) {
      INT = function (s) {
        func = function(s) {
          dEQ_l_dl(q = 1, u = 0, v = 1, prob = "Q",t, s, l, sex) * EQ_r(t, s, q = 1, r,prob = "Q")
        }
        sapply (s, func )
      } 
      integrate (INT, t, 200) $value
}
  
dF_dr = function (t, r, l, sex) {
            q_l = 1 + 0.5 * (delta - 1)/delta^2 * k_l^2
            q_r = 1 - 1/delta + 0.5 * (delta - 1)/delta^2 *k_r^2
            INT = function (s) {
              func = function(s) {
                EQ_l(t, s, q = q_l, u = 0, v = 1, l, prob = "Qd",sex)*
                  dEQ_r_dr(q = q_r, prob = "Qd",t, s, r)*
                  exp(-(rho/delta + 0.5*(delta - 1)/delta^2 * xi_A^2) * (s -t))
              }
              sapply (s, func)
            }    
            integrate (INT, t, 200)$value
}

dF_dl = function(t, r, l, sex) {
            q_l = 1 + 0.5 * (delta - 1)/delta^2 * k_l^2
            q_r = 1 - 1/delta + 0.5 * (delta - 1)/delta^2*k_r^2
            INT = function(s) {
              func = function(s) {
                      dEQ_l_dl (q = q_l, u = 0, v = 1, prob = "Qd",t, s, l, sex)* 
                      EQ_r(t, s, q = q_r,r, prob = "Qd")*exp(-(rho/delta +0.5 * (delta - 1)/delta^2 * xi_A^2) *(s-t))
                  }
                  sapply (s, func)
                }
                integrate (INT, t, 200)$value
              }
              
dDelta_dr = function(t, T, c, r, l, sex) {
              INT_A = function(s){
                  func = function(s){
                    dEQ_c_r_dr(t, s, c, r) * EQ_l(t, s, q = 1,u = 1, v = 0, l, "Q", sex)
                  }
                  sapply (s, func)
              }
              INT_D = function(s){
                  func = function(s){
                        dEQ_r_dr (q = 1, "Q", t, s, r) * EQ_l(t,s, q = 1, u = 1, v = 0, l, "Q", sex)
                  }
                  sapply (s , func )
              }
              p[sex] * integrate(INT_D, max(t, T), 200)$value -integrate(INT_A, min(t, T), T)$value
            }
              
dDelta_dl = function (t, T, c, r, l, sex){
                INT_A = function(s){
                  func = function(s){
                    EQ_c_r(t, s, c, r) * dEQ_l_dl(q = 1, u = 1,v = 0, "Q", t, s, l, sex)
                  }
                  sapply (s, func)
                }
                INT_D = function(s){
                  func = function(s) {
                    EQ_r(t, s, q = 1, r, "Q") * dEQ_l_dl(q = 1,u = 1, v = 0, "Q", t, s, l, sex)
                  }
                  sapply (s, func)
                }
                p[sex] * integrate(INT_D, max(t, T) , 200)$value -
                      integrate(INT_A, min(t, T) , T)$value
              }
              


    
##グラフ
#EQ_r
delta = 2.5
plot(seq(0, 100), lapply(seq(0, 100), EQ_r, q=1,prob = "Q", t = 0, r = beta_r)
      , type ="l", xlab = "time",ylab="Discounted value")
grid()
#EQ_l
age = 25
plot (age + seq(0, 70), lapply(seq(0, 70), EQ_l, t = 0,
                               q = 1, u = 1, v = 0, l = l0[1], prob = "Q", sex = 1),
      type = "l", xlab = "age", ylab = "Survival probability - Q")
lines (age + seq(0, 70), lapply(seq(0, 70), EQ_l, t = 0,
                                q = 1, u = 1, v = 0, l = l0 [2], prob = "Q", sex = 2) ,lty = 2)

legend ("topright", c("males", "females"), lty = c(1,2) , bty = "n")
grid()
#EQ_l_l
plot (age + seq(0, 70), lapply (seq(0, 70), EQ_l, t = 0,
                                q = 1, u = 0, v = 1, l = l0[1], prob = "Q", sex = 1) ,
      type = "l", xlab = "age", ylab = "")
lines (age + seq(0, 70), lapply(seq(0, 70), EQ_l, t = 0,
                                q = 1, u = 0, v = 1, l = l0[2], prob = "Q", sex = 2),lty = 2)
legend ("topright", c("males", "females"), lty = c(1,2) , bty = "n")
grid()
#E_c_r
plot (seq(0, 100), lapply (seq(0, 100), EQ_c_r, t = 0,c= 1, r = beta_r) , type = "l", xlab = "time",ylab = "")
grid( )
#H
matplot (age + seq(0, 100), cbind (lapply (seq(0, 100),H, r = beta_r, l = l0[1], sex = 1),
                                   lapply(seq(0,100) , H, r = beta_r, l = l0[2], sex = 2)), type = "l",
         xlab = "age", ylab = "Function H", lty = c(1, 2) ,col = 1)
grid()
legend ("topright", c("males", "females"), lty = c(1,2) , bty = "n")
#F
matplot (age + seq(0, 100), cbind (lapply(seq(0, 100),F, r = beta_r, l = l0[1], sex = 1),
                                   lapply(seq(0, 100),F, r = beta_r, l = l0[2], sex = 2) ), type = "l",
         xlab = "age", ylab = "Function F", lty = c(1, 2) ,col = 1)
grid()
legend ("topleft", c("males", "females"), lty = c(1,2) , bty = "n")
#PMR
plot(age + seq(0, 75), lapply (seq(0, 75), PMR, c = 1,r= beta_r, l = l0 [1], sex = 1, T = 65 - age),
      type = "l", xlab = "age", ylab = "PMR")
lines (age + seq(0, 75), lapply(seq(0, 75), PMR, c = 1,r = beta_r, l = l0[2], sex = 2, T = 65 - age),
       type = "l", lty = 2)
grid()
legend ("topleft", c("males", "females"), lty = c(1,2) , bty = "n")
#dDelta/dc
matplot(age + seq(0, 75), cbind(lapply(seq(0, 75),dDelta_dc,c = 1,r = beta_r,l = l0[1], sex = 1,T = 65 - age),
                                lapply (seq(0, 75), dDelta_dc, c = 1,r = beta_r, l = l0[2], sex = 2, T = 65 - age)),
         type = "l", xlab = "age", ylab = "Derivative of PMR w.r.t c",lty = c(1, 2), col = 1)

grid()
legend ("bottomright", c("males", "females"), lty = c(1,2) , bty = "n")
#dQ_r/dr
plot (20 - seq(0, 20), dEQ_r_dr(q = 1, prob = "Q", t = seq(0,20) , T = 20, r = beta_r) ,
      type = "l", xlab = "Time to maturity",ylab = "Derivative of B(0, T-t) w.r.t. r")

grid()




